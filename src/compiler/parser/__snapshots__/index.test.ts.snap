// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse 1`] = `
Object {
  "classes": Object {
    "Invite": Object {
      "exportedName": "default",
      "idName": "id",
      "instanceAPI": Object {
        "auth": Object {},
        "authMethods": Object {},
        "methods": Object {},
        "properties": Object {
          "id": Object {
            "kind": "String",
            "loc": Object {
              "fileName": "/src/example/objects/Other.ts",
              "line": 3,
            },
          },
        },
      },
      "loc": Object {
        "fileName": "/src/example/objects/Other.ts",
        "line": 2,
      },
      "staticAPI": Object {
        "auth": Object {},
        "authMethods": Object {},
        "methods": Object {},
      },
    },
    "Person": Object {
      "exportedName": "default",
      "idName": "id",
      "instanceAPI": Object {
        "auth": Object {
          "anyField": "public",
          "enemies": "isSelf",
          "enumField": "public",
          "friends": "isSelf",
          "id": "public",
          "name": "public",
          "objectWithOptionalProperty": "public",
        },
        "authMethods": Object {
          "$isSelf": Object {
            "args": Object {
              "elements": Array [
                Object {
                  "kind": "Void",
                },
                Object {
                  "kind": "Object",
                  "properties": Object {},
                },
              ],
              "kind": "Union",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 28,
              },
            },
            "length": 2,
            "name": "$isSelf",
            "result": Object {
              "kind": "Boolean",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 28,
              },
            },
          },
        },
        "methods": Object {
          "anyField": Object {
            "args": Object {
              "kind": "Void",
            },
            "length": 0,
            "name": "anyField",
            "result": Object {
              "kind": "Any",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 50,
              },
            },
          },
          "enemies": Object {
            "args": Object {
              "kind": "Void",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 37,
              },
            },
            "length": 2,
            "name": "enemies",
            "result": Object {
              "kind": "Promise",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 37,
              },
              "result": Object {
                "element": Object {
                  "kind": "Named",
                  "name": "Person",
                },
                "kind": "List",
              },
            },
          },
          "enumField": Object {
            "args": Object {
              "kind": "Void",
            },
            "length": 0,
            "name": "enumField",
            "result": Object {
              "elements": Array [
                Object {
                  "kind": "Literal",
                  "value": 10,
                },
                Object {
                  "kind": "Literal",
                  "value": 20,
                },
              ],
              "enumDeclaration": "MyEnum",
              "kind": "Union",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 46,
              },
            },
          },
          "friends": Object {
            "args": Object {
              "kind": "Void",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 32,
              },
            },
            "length": 2,
            "name": "friends",
            "result": Object {
              "kind": "Promise",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 32,
              },
              "result": Object {
                "element": Object {
                  "kind": "Named",
                  "name": "Person",
                },
                "kind": "List",
              },
            },
          },
          "objectWithOptionalProperty": Object {
            "args": Object {
              "kind": "Void",
            },
            "length": 0,
            "name": "objectWithOptionalProperty",
            "result": Object {
              "kind": "Object",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 43,
              },
              "properties": Object {
                "foo": Object {
                  "elements": Array [
                    Object {
                      "kind": "String",
                      "loc": Object {
                        "fileName": "/src/example/objects/Person.ts",
                        "line": 43,
                      },
                    },
                    Object {
                      "kind": "Void",
                    },
                  ],
                  "isOptional": true,
                  "kind": "Union",
                  "loc": Object {
                    "fileName": "/src/example/objects/Person.ts",
                    "line": 43,
                  },
                },
              },
            },
          },
        },
        "properties": Object {
          "id": Object {
            "kind": "Number",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 12,
            },
          },
          "name": Object {
            "elements": Array [
              Object {
                "kind": "Null",
              },
              Object {
                "kind": "String",
              },
            ],
            "kind": "Union",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 13,
            },
          },
        },
      },
      "loc": Object {
        "fileName": "/src/example/objects/Person.ts",
        "line": 16,
      },
      "staticAPI": Object {
        "auth": Object {
          "set": "public",
        },
        "authMethods": Object {},
        "methods": Object {
          "set": Object {
            "args": Object {
              "kind": "Object",
              "loc": Object {
                "fileName": "/src/example/objects/Person.ts",
                "line": 58,
              },
              "properties": Object {
                "field": Object {
                  "kind": "String",
                  "loc": Object {
                    "fileName": "/src/example/objects/Person.ts",
                    "line": 58,
                  },
                },
                "value": Object {
                  "kind": "String",
                  "loc": Object {
                    "fileName": "/src/example/objects/Person.ts",
                    "line": 58,
                  },
                },
              },
            },
            "length": 2,
            "name": "set",
            "result": Object {
              "kind": "Void",
            },
          },
        },
      },
    },
    "Root": Object {
      "exportedName": "Root",
      "idName": "id",
      "instanceAPI": Object {
        "auth": Object {
          "page": "public",
          "people": "public",
          "peopleByEmail": "public",
          "person": "public",
        },
        "authMethods": Object {},
        "methods": Object {
          "page": Object {
            "args": Object {
              "kind": "Void",
            },
            "length": 0,
            "name": "page",
            "result": Object {
              "kind": "Named",
              "loc": Object {
                "fileName": "/src/example/objects/Root.ts",
                "line": 30,
              },
              "name": "RichText",
            },
          },
          "people": Object {
            "args": Object {
              "kind": "Void",
              "loc": Object {
                "fileName": "/src/example/objects/Root.ts",
                "line": 13,
              },
            },
            "length": 2,
            "name": "people",
            "result": Object {
              "kind": "Promise",
              "loc": Object {
                "fileName": "/src/example/objects/Root.ts",
                "line": 13,
              },
              "result": Object {
                "element": Object {
                  "kind": "Named",
                  "name": "Person",
                },
                "kind": "List",
              },
            },
          },
          "peopleByEmail": Object {
            "args": Object {
              "kind": "Named",
              "loc": Object {
                "fileName": "/src/example/objects/Root.ts",
                "line": 19,
              },
              "name": "Email",
            },
            "length": 2,
            "name": "peopleByEmail",
            "result": Object {
              "kind": "Promise",
              "loc": Object {
                "fileName": "/src/example/objects/Root.ts",
                "line": 19,
              },
              "result": Object {
                "element": Object {
                  "kind": "Named",
                  "name": "Person",
                },
                "kind": "List",
              },
            },
          },
          "person": Object {
            "args": Object {
              "kind": "Number",
              "loc": Object {
                "fileName": "/src/example/objects/Root.ts",
                "line": 16,
              },
            },
            "length": 2,
            "name": "person",
            "result": Object {
              "kind": "Promise",
              "loc": Object {
                "fileName": "/src/example/objects/Root.ts",
                "line": 16,
              },
              "result": Object {
                "kind": "Named",
                "name": "Person",
              },
            },
          },
        },
        "properties": Object {},
      },
      "loc": Object {
        "fileName": "/src/example/objects/Root.ts",
        "line": 8,
      },
      "staticAPI": Object {
        "auth": Object {},
        "authMethods": Object {},
        "methods": Object {},
      },
    },
  },
  "context": Array [
    Object {
      "exportName": "default",
      "fileName": "/src/example/Context",
    },
  ],
  "enums": Object {
    "EmailBrand": Object {
      "exportName": "EmailBrand",
      "location": Object {
        "fileName": "/src/example/scalars/Email.ts",
        "line": 1,
      },
      "name": "EmailBrand",
    },
    "MyEnum": Object {
      "exportName": "default",
      "location": Object {
        "fileName": "/src/example/scalars/MyEnum.ts",
        "line": 1,
      },
      "name": "MyEnum",
    },
    "RichText": Object {
      "exportName": "default",
      "location": Object {
        "fileName": "/src/example/scalars/RichText.ts",
        "line": 1,
      },
      "name": "RichText",
    },
  },
  "scalars": Object {
    "Email": Object {
      "aliasLocation": Object {
        "fileName": "/src/example/scalars/Email.ts",
        "line": 6,
      },
      "brandName": "EmailBrand",
      "exportName": "default",
      "name": "Email",
      "type": Object {
        "kind": "String",
        "loc": Object {
          "fileName": "/src/example/scalars/Email.ts",
          "line": 7,
        },
      },
      "validatorLocation": Object {
        "fileName": "/src/example/scalars/Email.ts",
        "line": 6,
      },
      "validatorName": "validateEmail",
    },
    "RichText": Object {
      "aliasLocation": Object {
        "fileName": "/src/example/scalars/RichText.ts",
        "line": 4,
      },
      "brandName": "RichText",
      "exportName": "default",
      "name": "RichText",
      "type": Object {
        "kind": "Any",
      },
      "validatorLocation": Object {
        "fileName": "/src/example/scalars/RichText.ts",
        "line": 4,
      },
      "validatorName": "validate",
    },
  },
}
`;
