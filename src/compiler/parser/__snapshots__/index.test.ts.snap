// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse 1`] = `
Object {
  "classes": Object {
    "Person": Object {
      "auth": Object {
        "enemies": "isSelf",
        "enumField": "public",
        "friends": "isSelf",
        "id": "public",
        "name": "public",
        "objectWithOptionalProperty": "public",
      },
      "data": Object {
        "kind": "Object",
        "loc": Object {
          "fileName": "/src/example/objects/Person.ts",
          "line": 17,
        },
        "properties": Object {
          "id": Object {
            "kind": "Number",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 12,
            },
          },
          "links": Object {
            "element": Object {
              "kind": "Object",
              "properties": Object {
                "linkType": Object {
                  "elements": Array [
                    Object {
                      "kind": "Literal",
                      "value": "friend",
                    },
                    Object {
                      "kind": "Literal",
                      "value": "enemy",
                    },
                  ],
                  "kind": "Union",
                  "loc": Object {
                    "fileName": "/src/example/objects/Person.ts",
                    "line": 8,
                  },
                },
                "person": Object {
                  "kind": "Named",
                  "loc": Object {
                    "fileName": "/src/example/objects/Person.ts",
                    "line": 7,
                  },
                  "name": "Person",
                },
              },
            },
            "kind": "List",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 14,
            },
          },
          "name": Object {
            "elements": Array [
              Object {
                "kind": "Null",
              },
              Object {
                "kind": "String",
              },
            ],
            "kind": "Union",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 13,
            },
          },
        },
      },
      "exportedName": "default",
      "idName": "id",
      "loc": Object {
        "fileName": "/src/example/objects/Person.ts",
        "line": 16,
      },
      "methods": Object {
        "$isSelf": Object {
          "args": Object {
            "elements": Array [
              Object {
                "kind": "Void",
              },
              Object {
                "kind": "Object",
                "properties": Object {},
              },
            ],
            "kind": "Union",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 22,
            },
          },
          "length": 2,
          "result": Object {
            "kind": "Boolean",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 22,
            },
          },
        },
        "enemies": Object {
          "args": Object {
            "kind": "Void",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 31,
            },
          },
          "length": 2,
          "result": Object {
            "kind": "Promise",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 31,
            },
            "result": Object {
              "element": Object {
                "kind": "Named",
                "name": "Person",
              },
              "kind": "List",
            },
          },
        },
        "enumField": Object {
          "args": Object {
            "kind": "Void",
          },
          "length": 0,
          "result": Object {
            "elements": Array [
              Object {
                "kind": "Literal",
                "value": 10,
              },
              Object {
                "kind": "Literal",
                "value": 20,
              },
            ],
            "enumDeclaration": "MyEnum",
            "kind": "Union",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 40,
            },
          },
        },
        "friends": Object {
          "args": Object {
            "kind": "Void",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 26,
            },
          },
          "length": 2,
          "result": Object {
            "kind": "Promise",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 26,
            },
            "result": Object {
              "element": Object {
                "kind": "Named",
                "name": "Person",
              },
              "kind": "List",
            },
          },
        },
        "objectWithOptionalProperty": Object {
          "args": Object {
            "kind": "Void",
          },
          "length": 0,
          "result": Object {
            "kind": "Object",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 37,
            },
            "properties": Object {
              "foo": Object {
                "elements": Array [
                  Object {
                    "kind": "String",
                    "loc": Object {
                      "fileName": "/src/example/objects/Person.ts",
                      "line": 37,
                    },
                  },
                  Object {
                    "kind": "Void",
                  },
                ],
                "isOptional": true,
                "kind": "Union",
                "loc": Object {
                  "fileName": "/src/example/objects/Person.ts",
                  "line": 37,
                },
              },
            },
          },
        },
      },
      "staticAuth": Object {
        "set": "public",
      },
      "staticMethods": Object {
        "set": Object {
          "args": Object {
            "kind": "Object",
            "loc": Object {
              "fileName": "/src/example/objects/Person.ts",
              "line": 48,
            },
            "properties": Object {
              "field": Object {
                "kind": "String",
                "loc": Object {
                  "fileName": "/src/example/objects/Person.ts",
                  "line": 48,
                },
              },
              "value": Object {
                "kind": "String",
                "loc": Object {
                  "fileName": "/src/example/objects/Person.ts",
                  "line": 48,
                },
              },
            },
          },
          "length": 2,
          "result": Object {
            "kind": "Void",
          },
        },
      },
    },
    "Root": Object {
      "auth": Object {
        "people": "public",
        "peopleByEmail": "public",
        "person": "public",
      },
      "data": Object {
        "kind": "Object",
        "loc": Object {
          "fileName": "/src/example/objects/Root.ts",
          "line": 8,
        },
        "properties": Object {},
      },
      "exportedName": "Root",
      "idName": "id",
      "loc": Object {
        "fileName": "/src/example/objects/Root.ts",
        "line": 7,
      },
      "methods": Object {
        "people": Object {
          "args": Object {
            "kind": "Void",
            "loc": Object {
              "fileName": "/src/example/objects/Root.ts",
              "line": 12,
            },
          },
          "length": 2,
          "result": Object {
            "kind": "Promise",
            "loc": Object {
              "fileName": "/src/example/objects/Root.ts",
              "line": 12,
            },
            "result": Object {
              "element": Object {
                "kind": "Named",
                "name": "Person",
              },
              "kind": "List",
            },
          },
        },
        "peopleByEmail": Object {
          "args": Object {
            "kind": "Named",
            "loc": Object {
              "fileName": "/src/example/objects/Root.ts",
              "line": 18,
            },
            "name": "Email",
          },
          "length": 2,
          "result": Object {
            "kind": "Promise",
            "loc": Object {
              "fileName": "/src/example/objects/Root.ts",
              "line": 18,
            },
            "result": Object {
              "element": Object {
                "kind": "Named",
                "name": "Person",
              },
              "kind": "List",
            },
          },
        },
        "person": Object {
          "args": Object {
            "kind": "Number",
            "loc": Object {
              "fileName": "/src/example/objects/Root.ts",
              "line": 15,
            },
          },
          "length": 2,
          "result": Object {
            "kind": "Promise",
            "loc": Object {
              "fileName": "/src/example/objects/Root.ts",
              "line": 15,
            },
            "result": Object {
              "kind": "Named",
              "name": "Person",
            },
          },
        },
      },
      "staticAuth": Object {},
      "staticMethods": Object {},
    },
  },
  "context": Array [
    Object {
      "exportName": "default",
      "fileName": "/src/example/Context",
    },
  ],
  "enums": Object {
    "EmailBrand": Object {
      "exportName": "EmailBrand",
      "location": Object {
        "fileName": "/src/example/scalars/Email.ts",
        "line": 1,
      },
      "name": "EmailBrand",
    },
    "MyEnum": Object {
      "exportName": "default",
      "location": Object {
        "fileName": "/src/example/scalars/MyEnum.ts",
        "line": 1,
      },
      "name": "MyEnum",
    },
    "RichTextBrand": Object {
      "exportName": "RichTextBrand",
      "location": Object {
        "fileName": "/src/example/scalars/RichText.ts",
        "line": 1,
      },
      "name": "RichTextBrand",
    },
  },
  "scalars": Object {
    "Email": Object {
      "aliasLocation": Object {
        "fileName": "/src/example/scalars/Email.ts",
        "line": 6,
      },
      "brandName": "EmailBrand",
      "exportName": "default",
      "name": "Email",
      "type": Object {
        "kind": "String",
        "loc": Object {
          "fileName": "/src/example/scalars/Email.ts",
          "line": 7,
        },
      },
      "validatorLocation": Object {
        "fileName": "/src/example/scalars/Email.ts",
        "line": 6,
      },
      "validatorName": "validateEmail",
    },
    "RichText": Object {
      "aliasLocation": Object {
        "fileName": "/src/example/scalars/RichText.ts",
        "line": 6,
      },
      "brandName": "RichTextBrand",
      "exportName": "default",
      "name": "RichText",
      "type": Object {
        "kind": "Object",
        "loc": Object {
          "fileName": "/src/example/scalars/RichText.ts",
          "line": 7,
        },
        "properties": Object {
          "___html": Object {
            "kind": "String",
            "loc": Object {
              "fileName": "/src/example/scalars/RichText.ts",
              "line": 3,
            },
          },
        },
      },
      "validatorLocation": Object {
        "fileName": "/src/example/scalars/RichText.ts",
        "line": 6,
      },
      "validatorName": "validate",
    },
  },
}
`;
